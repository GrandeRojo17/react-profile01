{"version":3,"sources":["images/snapchat_bitmoji_clear_transparent_faceOnly_cropped.png","images/projectImages/fitnessTracker_Pic02.PNG","images/projectImages/weatherDash_01.PNG","components/NavBar.js","components/About.js","components/ProjectCard.js","components/Wrapper.js","components/Portfolio.js","components/Contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","href","className","to","About","src","ProfilePic","alt","PortfolioCard","props","name","pro2","title","description","link","github","Wrapper","children","Portfolio","state","projects","this","map","project","ProjectCard","id","key","image","Component","Contact","Card","Footer","App","NavBar","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,iF,0oCCA3CD,EAAOC,QAAU,IAA0B,kD,uDCA3CD,EAAOC,QAAU,IAA0B,4C,kHC8B5BC,EA3BA,WAIX,OACI,6BACI,yEAAW,uBAAGC,KAAK,KAAR,oBAEX,wBAAIC,UAAU,aACV,kBAAC,IAAD,CAAMC,GAAG,KACL,kDAEJ,kBAAC,IAAD,CAAMA,GAAG,cACL,sDAEJ,kBAAC,IAAD,CAAMA,GAAG,YACL,uD,yBCALC,EAbD,WACV,OACI,yBAAKF,UAAU,mBACX,mDACA,kCAAO,kDACP,yBAAKG,IAAKC,IAAYC,IAAI,4BAC1B,4JACA,iFACA,oG,iCCeGC,MAzBf,SAAuBC,GACnB,OACI,yBAAKP,UAAU,kBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,MAAMK,IAAKE,EAAMC,KAAML,IAAKM,OAE/C,yBAAKT,UAAU,WACX,4BACI,4BACI,gCAAMO,EAAMG,MAAZ,MAEJ,4BACI,gCAASH,EAAMI,cAEnB,4BAAI,uBAAGZ,KAAMQ,EAAMK,MAAf,qBACJ,4BACI,uBAAGb,KAAMQ,EAAMM,QAAf,qBCbTC,MAJf,SAAiBP,GACf,OAAO,yBAAKP,UAAU,WAAWO,EAAMQ,WC+B1BC,E,4MA3BXC,MAAQ,CACJC,Y,uDAMA,OACI,kBAAC,EAAD,KACI,4DACCC,KAAKF,MAAMC,SAASE,KAAI,SAAAC,GAAO,OAC5B,kBAACC,EAAD,CAEIC,GAAIF,EAAQE,GACZC,IAAKH,EAAQE,GACbb,MAAOW,EAAQX,MACfE,KAAMS,EAAQT,KACdC,OAAQQ,EAAQR,OAChBY,MAAOJ,EAAQI,MACfd,YAAaU,EAAQV,sB,GArBrBe,a,QCeTC,EAfC,WAIZ,OACI,kBAACC,EAAA,EAAD,CAAM5B,UAHC,SAKH,mDACA,gCAAQ,uBAAGD,KAAK,wFAAR,WACR,wCAAa,uBAAGA,KAAK,0DAAR,e,OCEV8B,EAbA,WAIX,OACI,kBAACD,EAAA,EAAD,CAAM5B,UAHC,SAIH,+DACA,+BAAI,uBAAGD,KAAK,0DAAR,8BCqBD+B,E,uKAnBX,OACE,kBAAC,IAAD,KACE,yBAAK9B,UAAU,OACb,kBAAC+B,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMC,4DAA8BC,UAAWjC,IAC5D,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAMC,iEAAmCC,UAAWjC,IACjE,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAMC,qEAAuCC,UAAWnB,IACrE,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAMC,mEAAqCC,UAAWR,KAIrE,kBAAC,EAAD,Y,GAfQD,aCEEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAEP,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H7B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ea782566.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snapchat_bitmoji_clear_transparent_faceOnly_cropped.bbaa2941.png\";","module.exports = __webpack_public_path__ + \"static/media/fitnessTracker_Pic02.08565fc9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/weatherDash_01.2cdd6cee.PNG\";","import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    const navStyle = {\r\n        color: 'whitesmoke'\r\n    }\r\n    return (\r\n        <nav>\r\n            <h2>üë®üèª‚Äçü¶∞<a href=\"/\" >David Yennerell</a>\r\n            </h2>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/\">\r\n                    <li>Aboutüßê</li>\r\n                </Link>\r\n                <Link to=\"/portfolio\">\r\n                    <li>Portfolioüëî</li>\r\n                </Link>\r\n                <Link to=\"/contact\" >\r\n                    <li>Contactüìû</li>\r\n                </Link>\r\n            </ul>\r\n\r\n\r\n\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\n\r\nimport ProfilePic from '../images/snapchat_bitmoji_clear_transparent_faceOnly_cropped.png'\r\n\r\nimport \"../index.css\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <h1>HELLOO!üëã</h1>\r\n            <p>I'm <span>David Yennerell</span></p>\r\n            <img src={ProfilePic} alt=\"My Pretty Cartoon Face.\" />\r\n            <p>I am a aspiring web developer based out of Kansas City who is close to finishing up a coding bootcamp with Kansas University </p>\r\n            <p>Born on the east coast and now in Kansas City, MO.</p>\r\n            <p>I offer a creative mindset to projects related to boosting revenue.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport pro1 from '../images/projectImages/weatherDash_01.PNG';\r\nimport pro2 from '../images/projectImages/fitnessTracker_Pic02.PNG';\r\n\r\nfunction PortfolioCard(props) {\r\n    return (\r\n        <div className=\"portfolio-card\">\r\n            <div className=\"img-container\">\r\n                <img className=\"img\" alt={props.name} src={pro2} />\r\n            </div>\r\n            <div className=\"content\">\r\n                <ul>\r\n                    <li>\r\n                        <h2> {props.title} </h2>\r\n                    </li>\r\n                    <li>\r\n                        <strong>{props.description}</strong>\r\n                    </li>\r\n                    <li><a href={props.link} >Try it out here!</a></li>\r\n                    <li>\r\n                        <a href={props.github}>Github Page </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PortfolioCard;","import React from \"react\";\n\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\r\nimport projects from \"./projects.json\";\r\n//The Portfolio Page\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nclass Portfolio extends Component {\r\n    // Setting this.state.projects to the projects json array\r\n    state = {\r\n        projects\r\n    };\r\n\r\n\r\n    // Map over this.state.projects and render a projectCard component for project object\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <h1> A few things I have made...</h1>\r\n                {this.state.projects.map(project => (\r\n                    <ProjectCard\r\n                        // removeProject={this.removeProject}\r\n                        id={project.id}\r\n                        key={project.id}\r\n                        title={project.title}\r\n                        link={project.link}\r\n                        github={project.github}\r\n                        image={project.image}\r\n                        description={project.description}\r\n\r\n                    />\r\n                ))}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\nexport default Portfolio","import React from 'react';\r\nimport {\r\n    Card\r\n} from 'reactstrap';\r\n\r\n\r\nconst Contact = () => {\r\n    const navStyle = {\r\n        color: 'black'\r\n    }\r\n    return (\r\n        <Card className={navStyle.color}>\r\n\r\n            <h1>ContactüëΩ</h1>\r\n            <button><a href=\"https://docs.google.com/document/d/1FqIyl6JFP37exl96-XmVJ710rYmlwGu_TfnKpJw8w18/edit\">Resume</a></button>\r\n            <p>linkedIn: <a href=\"https://www.linkedin.com/in/david-yennerell-815a471a2/\" >LinkedIn</a></p>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card } from 'reactstrap';\r\n\r\n\r\nconst Footer = () => {\r\n    const navStyle = {\r\n        color: 'black'\r\n    }\r\n    return (\r\n        <Card className={navStyle.color}>\r\n            <p>Email: David.Yennerell@gmail.com</p>\r\n            <p> <a href=\"https://www.linkedin.com/in/david-yennerell-815a471a2/\" >Thanks for dropping in!</a></p>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer;","\n// React Helmet is a simple component that makes it easy to manage and dynamically set what‚Äôs in the document‚Äôs head section. This makes server-side rendering and React Helmet a dynamic duo for creating apps that are SEO and social media-friendly.\nimport React, { Component } from \"react\";\nimport NavBar from './components/NavBar';\nimport './index.css'\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Footer from './components/Footer';\nclass App extends Component {\n  render() {\n\n    return (\n      <Router>\n        <div className=\"app\">\n          <NavBar />\n          <Switch>\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} component={About} />\n            <Route exact path={process.env.PUBLIC_URL + \"/about\"} component={About} />\n            <Route exact path={process.env.PUBLIC_URL + \"/portfolio\"} component={Portfolio} />\n            <Route exact path={process.env.PUBLIC_URL + \"/contact\"} component={Contact} />\n            {/* <Route exact path={process.env.PUBLIC_URL + \"/contact\"} component={Contact} /> */}\n          </Switch>\n\n          <Footer />\n        </div>\n\n      </Router>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <App />, document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}